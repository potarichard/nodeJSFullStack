npm init -y

npm i express ejs express-ejs-layouts           // install express is the framework, ejs template engine like thymeleaf, layouts for htmls

npm i --save-dev nodemon                        // auto build and restart server on save.


/////////////// package.json

  "scripts": {
    "start": "node server.js",      // lehet meghivni ezt a scriptet terminalbol, igy: npm run start, ennek hatasara ez fog lefutni, lehetne ezt is npm node server.js
    "devStart": "nodemon server.js" // ugyanugy npm run devStart es megy ez a parancs
  },

  ///////////////// folders

  routes  - mas neven controllers
  views   - views, itt mar a frontend van, olyan mint a thymeleaf, a server renderel htmleket es azt latja a frontend.
  models  - models Pojos, database models

  igy lesz az mvc model meg.

  ////////////////// frontend 

  public  - ide jon a frontend a javascipt fileokkal


  //////////////// database

  npm i mongoose    // elozoleg install mongoDB

  npm i --save-dev dotenv    // olyan lesz mint az application.property  ide lehet eteeni cuccokat

  //////////////////// .env
  DATABASE_URL=mongodb://localhost/mybrary        letrehoztam elotte mongoDB be egy mybrary databaset,  use mybrary   parancsal.

  ///////////////////// git
  inited git, added git repo on github, opushed to origin

  //////////////// heroku

  created new app on heroku (mynodejsfullstack),  installed heroku cli,  used heroku login,   then followed the commands on the heroku package
  basically just added remote git to heroku source.

        /////////////////// cloud.mongodb
  heroku (cloud) ugye local mongodb van itt nalam, az ott nem fog mukodni meg kell adni egy dbt a https://cloud.mongodb.com/  rol, ide beregel...
  created a cluster... , Cluster0 lett -> connect, aztan kell egy mongo db user ahhoz egy jelszo. (user, Kekqz5STJUAtjTrP) pw autogenerated

  aztan connect with app:
  mongodb+srv://user:<password>@cluster0.auqny.mongodb.net/<dbname>?retryWrites=true&w=majority     ezt kaptam
  Replace <password> with the password for the user user. Replace <dbname> with the name of the database that connections will use by default. 
  Ensure any option params are URL encoded.

  vegleges link: mongodb+srv://user:Kekqz5STJUAtjTrP@cluster0.auqny.mongodb.net/mybrary?retryWrites=true&w=majority 

  herokunal -> settings declare envioriment variables : 
  DATABASE_URL (key)  value meg ugye: mongodb+srv://user:Kekqz5STJUAtjTrP@cluster0.auqny.mongodb.net/mybrary?retryWrites=true&w=majority 


  es eddig igy mukodik!!!

  hozza kell majd afni a cloudmongodb nel WHITELIST minden ip cimet. 0.0.0.0/0  ugye csak a herokus app cimet kene dehat azt nem tudjuk pontosan csak a dnst.

  ////////////// body parser

  npm i body-parser       // ez arra kell hogy pl a formbol kuldott author pojo a server az adott @PostMappingon tudja fogadni, olyan mint springnel a @ReuestBody Author

  npm i multer            // helps with multipart files.


  // from browser you can only do get and post request,  PUT, DELETE request no, need to install method override

  npm i method-override

  //// javitasok, fejlesztesek

  spring fejelsztesi modelt kovetve kene meg egy service reteg, routesban levo logikakat at kell vinni abba a retegbe
  a viewst en kivennem, és csak rest responseok lennének, fronend ettol a projektől teljesen fuggetlen lenne, mondjuk react vagy angular, vagy sima JS 
  nincs repository reteg, rogton a modellen (entity) vegezzuk a database methodokat
  valamilyen security kene bele 

  maradna backenden csak a : server config, routes(controller reteg), service reteg(buisness logic), models(entity), env(app.properties)

  ////////////// update css

    lehet bongeszobe feltelepiteni olyan extensiont hogy css valtozast automatikusan lefrissitse es nem kell ujrabuildelni a frontendet, vagy igy az egesz projektet backendestol.
    
  